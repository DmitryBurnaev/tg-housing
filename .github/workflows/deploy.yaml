name: Deploy
on:
  push:
    branches:
      - 'main'
      - 'tech/12-deploy'
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
#  test:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v1
#
#      - name: Prepare .env file
#        env:
#          PWD: $(PWD)
#        run: |
#          cp .env.template .env
#          env >> .env
#
#      - name: Build image
#        run: docker compose build test
#
#      - name: Run tests
#        run: docker compose up --exit-code-from test test

  build:
#    needs: [test]
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    outputs:
      image_tag: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

#      - name: Log in to the Container registry
#        uses: docker/login-action@v3
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=ref,event=tag,value=latest

#      - name: Build and push Docker image
#        id: push
#        uses: docker/build-push-action@v6
#        with:
#          context: .
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Creating artifacts
        if: success()
        id: artefacts
        uses: actions/upload-artifact@v4
        with:
          name: deploy-artefacts
          path: |
            etc
            !etc/ansible/*
          retention-days: 21

      - name: Debug
        run: |
          echo ${{ steps.artefacts.outputs.artifact-url }}
          echo ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          echo ${{needs.build.outputs.image_tag}}
          echo ${{ github.workspace }}

      - name: Prepare inventory file
        run: |
          echo "[all]" > ${{ github.workspace }}/etc/ansible/.hosts
          echo "${{ secrets.SSH_HOST }} ansible_port=${{ secrets.SSH_PORT }}" >> ${{ github.workspace }}/etc/ansible/.hosts

      - name: Run deploy
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: deploy.yaml
          directory: ${{ github.workspace }}/etc/ansible/
          key: ${{secrets.SSH_PKEY}}
          options: |
            --extra-vars "artefact_url=${{ steps.artefacts.outputs.artifact-url }} project_root=${{ secrets.PROD_PROJECT_ROOT }} image_tag=${{needs.build.outputs.image_tag}}"                     
            --verbose
            --inventory .hosts
          configuration: |
            [defaults]
            host_key_checking = False
            ssh_args = -o StrictHostKeyChecking=False
