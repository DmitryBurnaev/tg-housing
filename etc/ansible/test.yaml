- name: Test playbook
  hosts: all
  gather_facts: no

  vars:
    ansible_python_interpreter: /usr/bin/python
    project_root: /opt/tg-housing
    user: deploy
    group: deploy
    artefact_url: https://github.com/DmitryBurnaev/tg-housing/actions/runs/10406888669/artifacts/1816451778
    image_url: ghcr.io/dmitryburnaev/tg-housing
    image_tag: feature-9-fix-ci

  tasks:
#    - name: Ping my hosts
#      ansible.builtin.ping:
#
#    - debug:
#        var: ansible_facts

    - name: Unzip etc remote artefact
      ansible.builtin.unarchive:
        src: "{{ artefact_url }}"
        dest: "{{ project_root }}"
        remote_src: yes

    - name: Pull image
      shell: "docker pull {{ image_url }}:{{ image_tag }}"

    - name: Restart service
      shell: "systemctl service {{ service_name }} restart"

    - name: Clean UP
      shell: "echo y | docker image prune -a"

    - name: Check Status
      shell: "systemctl service {{ service_name }} status"

#
#    - name: Copy etc artefact to server
#      ansible.builtin.copy:
#        src: /Users/dmitry/work/projects/my/tg-housing-services/.local/deploy_artefacts.tar.gz
#        dest: "{{ project_root }}"
##        owner: "{{ user }}"
##        group: "{{ group }}"
#        mode: "0644"

#    - name: Unzip etc remote artefact
#      ansible.builtin.unarchive:
#        src: "{{ project_root }}/deploy_artefacts.tar.gz"
#        dest: "{{ project_root }}"
#        remote_src: yes

#
##   - name: Echo python version
##     ansible.builtin.shell:
##      msg: Hello world
#
#   - name: This command will change the working directory to somedir/
#     ansible.builtin.shell:
#       cmd: ls -lah
#       chdir: /opt/
#
#   - name: Print message
#     ansible.builtin.debug:
#      msg: Hello world
