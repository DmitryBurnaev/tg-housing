- hosts: all
  gather_facts: no
  remote_user: "{{ ssh_user }}"
  vars:
    ansible_python_interpreter: /usr/bin/python

  tasks:
    - name: Ping my hosts
      ansible.builtin.ping:

    - debug:
        var: ansible_facts

    - name: Backup script exists
      stat:
        path: "{{ project_root }}/bin/backup"
      register: bin_backup_register

    - name: Run backup
      shell: "bash {{ project_root }}/bin/backup"
      when: bin_backup_register.stat.exists

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: "{{ artefact_path }}"
        dest: "/tmp/tg-housing-artefact.tar.gz"
        owner: "{{ ssh_user }}"
        group: "{{ ssh_user }}"
        mode: "0644"

    - name: Unzip artefact
      shell: |
        rm -rf /tmp/tg-housing-service
        mkdir /tmp/tg-housing-service
        tar -xvf /tmp/tg-housing-artefact.tar.gz -C /tmp/tg-housing-service
        cp -ru /tmp/tg-housing-service/* {{ project_root }}/
        rm -rf /tmp/tg-housing-service

    - name: Env file exists
      stat:
        path: "{{ project_root }}/.env"
      register: env_file_register

    - name: Prepare envs
      ansible.builtin.shell: |
        cp {{ project_root }}/env.template {{ project_root }}/.env &&       
        echo REGISTRY_URL={{registry_url}} >> {{ project_root }}/.env &&
        echo PWD={{ project_root }} >> {{ project_root }}/.env
      args:
        executable: /bin/bash
      when: not env_file_register.stat.exists

    - name: Remove artefact
      ansible.builtin.file:
        path: "/tmp/tg-housing-artefact.tar.gz"
        state: absent
